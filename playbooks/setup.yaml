---

- hosts: localhost
  connection: local
  gather_facts: false

  tasks:

# NETWORK SETUP

    - name: Create default VPC
      ec2_vpc_net:
        name: "{{ vpc_name }}"
        cidr_block: "{{ vpc_cidr_block }}"
        region: "{{ region }}"
      register: create_vpc
      tags: vpc

    - name: "Set fact: VPC ID"
      set_fact:
        vpc_id: "{{ create_vpc.vpc.id }}"
      tags: vpc

    - name: Ð¡reate VPC subnet
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        cidr: "{{ vpc_cidr }}"
        az: "{{ vpc_az }}"
        region: "{{ region }}"
        map_public: yes
        tags:
          Name: "{{ vpc_name }}"
      register: create_vpc_subnet
      tags: vpc

    - name: Create Internet Gateway for VPC
      ec2_vpc_igw:
        vpc_id:           "{{ vpc_id }}"
        region:           "{{ region }}"
        state:            "present"
      register: my_vpc_igw
      tags: vpc,gw

    - name: Set Internet Gateway ID in variable
      set_fact:
        igw_id:           "{{ my_vpc_igw.gateway_id }}"
      tags: vpc,gw

    - name: Set up VPC subnet route table
      ec2_vpc_route_table:
        vpc_id:           "{{ vpc_id }}"
        region:           "{{ region }}"
        tags:
          Name:           "Public"
        subnets:
          - "{{ create_vpc_subnet.subnet.id }}"
        routes:
          - dest:         "0.0.0.0/0"
            gateway_id:   "{{ igw_id }}"
      tags: vpc,gw

    - name: Create a security group
      ec2_group:
        name: "{{ security_group }}"
        description: Security Group for webserver Servers
        vpc_id: "{{ vpc_id }}"
        region: "{{ region }}"
        rules: "{{ security_rules }}"
#          - proto: tcp
#            from_port: 22
#            to_port: 22
#            cidr_ip: 0.0.0.0/0
#          - proto: tcp
#            from_port: 80
#            to_port: 80
#            cidr_ip: 0.0.0.0/0
#        rules_egress:
#          - proto: all
#            cidr_ip: 0.0.0.0/0
      tags: security

# EC2 SETUP

    - name: Create EC2 key pair from ~/.ssh/id_rsa.pub
      ec2_key:
        name: "{{ keypair }}"
        key_material: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
        region: "{{ region }}"
      tags: keypair

    - name: Launch the new EC2 Backend Instance
      ec2:
        group: "{{ security_group }}"
        instance_type: "{{ instance_type}}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
        instance_tags:
               Name: backend
        vpc_subnet_id: "{{ create_vpc_subnet.subnet.id }}"
      register: ec2
      tags: launchvm

    - name: Launch the new EC2 Frontend Instance
      ec2:
        group: "{{ security_group }}"
        instance_type: "{{ instance_type}}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        keypair: "{{ keypair }}"
        count: "{{count}}"
        instance_tags:
               Name: frontend
        vpc_subnet_id: "{{ create_vpc_subnet.subnet.id }}"
      register: ec2
      tags: launchvm
